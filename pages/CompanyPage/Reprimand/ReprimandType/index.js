import React, { Component, useMemo, useState } from "react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import styles from "/styles//Reprimand/ReprimandType.module.css";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
  faBars,
  faEnvelope,
  faUser,
  faMagnifyingGlass,
  faAngleRight,
	faAngleLeft,
} from "@fortawesome/free-solid-svg-icons";
import { useRouter } from "next/router";
import { COLUMNS } from "./columns";
import MOCK_DATA from "./MOCK_DATA.json";
import { useGlobalFilter, useTable, usePagination } from "react-table";
import AddNew from "./AddNew";


export default function ReprimandType() {

  const columns = useMemo(() => COLUMNS, []);
	const data = useMemo(() => MOCK_DATA, []);

	const {
		getTableProps,
		getTableBodyProps,
		headerGroups,
		page,
		nextPage,
		previousPage,
		canNextPage,
		canPreviousPage,
		setPageSize,
		prepareRow,
		state,
		setGlobalFilter,
	} = useTable({ columns, data }, useGlobalFilter, usePagination);

	const { globalFilter, pageIndex, pageSize } = state;

	const router = useRouter();
	const currentRoute = router.pathname;

  return (
    <div className={styles.container}>
      <Head>
        <title>Company Name</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx"
          crossorigin="anonymous"
        ></link>
      </Head>

      <main className={styles.main}>
        <div className={styles.header}>
          <FontAwesomeIcon
            className={styles.icon}
            icon={faBars}
            style={{ fontSize: 32, color: "white" }}
          />
          <div className={styles.logo}>
            <Image
              src="/EasyHandler_Hitam.png"
              alt="logo"
              width={50}
              height={50}
            />
          </div>
          <div className={styles.headerRight}>
            <FontAwesomeIcon
              className={styles.icon2}
              icon={faEnvelope}
              style={{ fontSize: 29, color: "white" }}
            />
            <Image
              src="/Group_3.png"
              alt="logo"
              width={40}
              height={40}
            />
          </div>
        </div>
        <div className={styles.image}>
          <img src="/image_535.png" className={styles.image}></img>
        </div>
        <div className={styles.box}>
          <div className={styles.link}>
             <a href="/CompanyPage/Reprimand/ReprimandList">Reprimand List</a>
             <a href="/CompanyPage/Reprimand/ReprimandType">Reprimand Type</a>
          </div>
          <div className={styles.content}>
            <div class="d-flex justify-content-between align-items-center table-light">
              <button
                type="button"
                class="btn btn-outline-secondary btn-sm mt-4 ms-4 mb-3"
                data-bs-toggle="modal"
                data-bs-target="#modalCreate"
              >
                ADD NEW
              </button>
            </div>
            <section class="section-sellect-search mb-4">
              <div class="container-fluid">
                <div class="row mt-3 justify-content-end me-1">
                  <div class="col-2">
                    <label
                      for="search"
                      className={`${styles.formLabel} form-label`}
                    >
                      Search
                    </label>
                    <div className={`input-group mb-3`}>
                      <span className={`${styles.spanIcon} input-group-text`}>
                        <FontAwesomeIcon
                          className={styles.searchIcon}
                          icon={faMagnifyingGlass}
                        />
                      </span>
                      <input
                        type="text"
                        className={`${styles.searchInput} form-control`}
                      ></input>
                    </div>
                  </div>
                  <div class="col-1">
                    <label
                      for="select"
                      className={`${styles.formLabel} form-label`}
                    >
                      Showing
                    </label>
                    <select
                      className={`${styles.formSelect} form-select`}
                      id="select"
                    >
                      <option selected>10</option>
                      <option value="25">25</option>
                      <option value="50">50</option>
                      <option value="75">75</option>
                      <option value="100">100</option>
                    </select>
                  </div>
                </div>
              </div>
            </section>

            <section class="section-table">
							<div className={`${styles.contentTable} container-fluid`}>
								<div class="row align-items-start mx-2">
									<table
										{...getTableProps}
										className="table mb-3 shadow-sm rounded-3 overflow-hidden align-middle mb-0 bg-white"
									>
										<thead className="bg-light">
											{headerGroups.map((headerGroup) => (
												<tr {...headerGroup.getHeaderGroupProps()}>
													{headerGroup.headers.map((column) => (
														<th {...column.getHeaderProps()}>{column.render("Header")}</th>
													))}
												</tr>
											))}
										</thead>
										<tbody {...getTableBodyProps}>
											{page.map((row) => {
												prepareRow(row);
												return (
													<tr {...row.getRowProps()}>
														{row.cells.map((cell) => {
															return <td {...cell.getCellProps()}>{cell.render("Cell")}</td>;
														})}
													</tr>
												);
											})}
										</tbody>
									</table>
								</div>
							</div>
						</section>

						<section class="section-paginate mt-3">
							<div className={`container-fluid`}>
								<div className={`${styles.rowPaginate}`}>
									<p className={styles.textShow}>
										Showing 1 to {pageSize} of {pageSize} entries
									</p>
									<div>
										<Link href="#">
											<FontAwesomeIcon
												onClick={() => previousPage()}
												icon={faAngleLeft}
												className={`${
													!canPreviousPage
														? styles["arrow-icon-disabled"]
														: styles["arrow-icon"]
												} `}
											/>
										</Link>
										&nbsp; &nbsp;{" "}
										<span className={styles.numberPage}>{pageIndex + 1}</span> &nbsp;
										&nbsp;
										<Link href="#">
											<FontAwesomeIcon
												onClick={() => nextPage()}
												icon={faAngleRight}
												className={`${
													!canNextPage ? styles["arrow-icon-disabled"] : styles["arrow-icon"]
												} `}
											/>
										</Link>
									</div>
								</div>
							</div>
						</section>

          </div>
        </div>

        <div
          class="modal fade"
          id="modalCreate"
          tabindex="-1"
          aria-labelledby="modalCreate"
          aria-hidden="true"
        >
          <div class="modal-dialog">
            <AddNew />
          </div>
        </div>
      </main>
      <script
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa"
        crossorigin="anonymous"
      ></script>
    </div>
  );
}
